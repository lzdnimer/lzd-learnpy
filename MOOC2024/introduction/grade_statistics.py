def results():
    examResults = []
    exerComplete = []
   
    # obtains user input, converting to int then appending into respective exam and exercise category
    while True:
        results = input("Exam points and exercises completed: ")
        if results == '':
            break
        examResults.append(int(results.split()[0]))        
        exerComplete.append(int(results.split()[1]))
    return examResults, exerComplete
    
def conversion():
    examResults, exerComplete = results() # unpacking tuple generated by results() function into two variables
    exerPts = []

    # exercises completed are converted into points
    for exercise in exerComplete:
        exerPts.append(exercise//10)

    # determining final grade: if exam grade is < 10, endgrade is 0 regardless. Otherwise, it is exam points + exerPts
    endgrade = []
    for i in range(len(examResults)):
        if examResults[i] < 10:
            endgrade.append(0)
        else:
            endgrade.append(examResults[i] + exerPts[i])

    return examResults, exerPts, endgrade

def summary():
    examResults, exerPts, endgrade = conversion() # unpacking the tuple from conversion() function

    final = []
    for grade in endgrade:
        if grade >= 28 and grade <= 30:
            final.append(5)
        elif grade >= 24 and grade <= 27:
            final.append(4)
        elif grade >= 21 and grade <= 23:
            final.append(3)
        elif grade >= 18 and grade <= 20:
            final.append(2)
        elif grade >= 15 and grade <= 17:
            final.append(1)
        else:
            final.append(0)

    ptsavg = (sum(examResults) + sum(exerPts)) / len(examResults) # points average
    passavg = (len(final) - final.count(0)) / len(final) * 100.0 # pass average
    print(f"""
Statistics:
Points average: {ptsavg:.1f}
Pass percentage: {passavg:.1f}
Grade distribution:
5: {final.count(5) * "*"}
4: {final.count(4) * "*"}
3: {final.count(3) * "*"}
2: {final.count(2) * "*"}
1: {final.count(1) * "*"}
0: {final.count(0) * "*"}
    """)

summary()